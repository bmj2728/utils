name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Go ${{ matrix.go-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: ['1.22', '1.23', '1.24']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Run tests with race detection
        run: |
          go test -race -coverprofile=coverage-${{ matrix.go-version }}.out -covermode=atomic ./...

      - name: Upload coverage to Codecov
        if: matrix.go-version == '1.24'  # Only upload once
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage-${{ matrix.go-version }}.out
          flags: unittests
          name: codecov-umbrella
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.go-version }}
          path: coverage-${{ matrix.go-version }}.out
          retention-days: 7

  test-features:
    name: Feature Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Test with different build tags
        run: |
          # Test with different build configurations if applicable
          go test -tags integration ./...

      - name: Benchmark tests
        run: |
          go test -bench=. -benchmem ./...