package strutil

import (
	"math/rand"

	lorelai "github.com/UltiRequiem/lorelai/pkg"
)

// loremWord generates and returns a single random word as a string.
func loremWord() string {
	return lorelai.Word()
}

// loremWords generates a string containing the specified number of lorem ipsum words.
// If less than 1 returns a nil string
func loremWords(count int) string {
	if count < 1 {
		return ""
	}
	return lorelai.LoremWords(count)
}

// loremSentence returns a randomly generated lorem ipsum sentence as a string.
func loremSentence() string {
	return lorelai.Sentence()
}

// loremSentenceCustom generates a lorem ipsum sentence with the specified number of words
// determined by the length parameter.
func loremSentenceCustom(length int) string {
	if length < 1 {
		return ""
	}
	return lorelai.FormattedLoremWords(length)
}

// loremSentences generates a string containing the specified number of randomly generated lorem ipsum sentences.
func loremSentences(count int) string {
	if count < 1 {
		return ""
	}
	sentences := ""
	for i := 0; i < count; i++ {
		if sentences != "" {
			sentences += " "
		}
		sentences += loremSentence()
	}
	return sentences
}

// loremSentencesCustom generates multiple lorem ipsum sentences with a specified count and length per sentence.
func loremSentencesCustom(count int, length int) string {
	if count < 1 || length < 1 {
		return ""
	}
	sentences := ""
	for i := 0; i < count; i++ {
		if sentences != "" {
			sentences += " "
		}
		sentences += loremSentenceCustom(length)
	}
	return sentences
}

// loremSentenceVariable generates a specified number of lorem ipsum sentences
// with random lengths between min and max values.
func loremSentencesVariable(count, min, max int) string {
	if count < 1 || min > max {
		return ""
	}
	sentences := ""
	for i := 0; i < count; i++ {
		if sentences != "" {
			sentences += " "
		}
		sentences += loremSentenceCustom(rand.Intn(max-min) + min)
	}
	return sentences
}

// loremParagraph generates and returns a single Lorem Ipsum paragraph as a string.
func loremParagraph() string {
	return lorelai.Paragraph()
}

// loremParagraphs generates a specified number of lorem ipsum paragraphs and returns them as a single string.
// The parameter 'count' determines the number of paragraphs to generate.
// Returns an empty string if count is less than 1.
func loremParagraphs(count int) string {
	if count < 1 {
		return ""
	}
	paragraphs := ""
	for i := 0; i < count; i++ {
		if paragraphs != "" {
			paragraphs += "\n\n"
		}
		paragraphs += loremParagraph()
	}
	return paragraphs
}

// loremDomain returns a string representing the domain from the lorelai package.
func loremDomain() string {
	return lorelai.Domain()
}

// loremURL returns a URL string generated by the lorelai package.
func loremURL() string {
	return lorelai.URL()
}

// loremEmail generates and returns a mock email address using the lorelai package.
func loremEmail() string {
	return lorelai.Email()
}
